@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax
@using Nop.Core.Infrastructure
@using Nop.Web.Models.Catalog;
@{
    //prepare "Add to cart" AJAX link
    string addtocartlink = "";
    var shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart;
    var quantity = 1;
    if (Model.ProductPrice.ForceRedirectionAfterAddingToCart)
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, forceredirection = Model.ProductPrice.ForceRedirectionAfterAddingToCart });
    }
    else
    {
        addtocartlink = Url.RouteUrl("AddProductToCart-Catalog", new { productId = Model.Id, shoppingCartTypeId = shoppingCartTypeId, quantity = quantity, });
    }    
}
<a href="@Url.RouteUrl("Product", new { SeName = Model.SeName })" class="aditionalInfo" flag="0" >
    <div class="product-item" data-productid="@Model.Id">
        <div class="picture">
            <table width="100%" border="0" cellspacing="0" cellpadding="0">
                <tr>
                    <td valign="bottom">

                        <img alt="@Model.DefaultPictureModel.AlternateText" src="@Model.DefaultPictureModel.ImageUrl"/>

                    </td>
                </tr>
            </table>


        </div>
        <div class="details">
            <h2 class="product-title">
                @{ 
                    var description = "";
                    //if (Model.ShortDescription != null)
                    //{
                    //    var descriptionvalue = Model.ShortDescription;

                    //    if (descriptionvalue.Length > 80)
                    //    {
                    //        description = descriptionvalue.Substring(0, 80) + "...";
                    //    }
                    //    else
                    //    {
                    //        description = descriptionvalue;
                    //    }
                    //}
                    var name = "";
                    if (Model.Name != null)
                    {
                        var namevalue = Model.Name;

                        if (namevalue.Length > 28)
                        {
                            name = namevalue.Substring(0, 28) + "...";
                        }
                        else
                        {
                            name = namevalue;
                        }
                    }
                }
                <span>@name</span>

            </h2>


            <div class="add-info">
                <div class="prices home-best-seller">
                    @if (!String.IsNullOrEmpty(Model.ProductPrice.OldPrice))
                    {
                        <span class="price old-price">@Model.ProductPrice.OldPrice</span>
                    }

                    @*<div class="clear"></div>*@
                    <span class="price actual-price">@Model.ProductPrice.Price</span>
                    @if (Model.ProductPrice.DisplayTaxShippingInfo)
                    {
                        var inclTax = EngineContext.Current.Resolve<IWorkContext>().TaxDisplayType == TaxDisplayType.IncludingTax;
                        //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                        //of course, you can modify appropriate locales to include VAT info there
                        <div class="tax-shipping-info">
                            @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                        </div>
                    }
                </div>
                @* @if (Model.ReviewOverviewModel.AllowCustomerReviews)
            {
                int ratingPercent = 0;
                if (Model.ReviewOverviewModel.TotalReviews != 0)
                {
                    ratingPercent = ((Model.ReviewOverviewModel.RatingSum * 100) / Model.ReviewOverviewModel.TotalReviews) / 5;
                }
                <div class="product-rating-box" title="@string.Format(T("Reviews.TotalReviews").Text, Model.ReviewOverviewModel.TotalReviews)">
                    <div class="rating">
                        <div style="width: @(ratingPercent)%">
                        </div>
                    </div>
                </div>
            }*@
                <div class="clear"></div>
                <div class="cart 1" style="display: none">
                    @if (Model.ProductPrice.DisableWishlistButton && Model.ProductPrice.DisableBuyButton)
                    {
                        <input type="button" value="@T("Products.Details")" class="product-box-details-button-mobile" onclick="setLocation('@Url.RouteUrl("Product", new { SeName = Model.SeName })    ')" />
                    }
                    else
                    {
                        if (!Model.ProductPrice.DisableWishlistButton)
                        {
                        <input type="button" id="add-to-wishlist-button-@Model.Id" class="add-to-wishlist-button-mobile" value="@T("ShoppingCart.AddToWishlist")" data-productid="@Model.Id" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.Id, shoppingCartTypeId = (int)ShoppingCartType.Wishlist })    ', '#product-details-form');return false;" />
                        }
                        if (!Model.ProductPrice.DisableBuyButton)
                        {
                            var addToCartText = T("ShoppingCart.AddToCart").Text;
                            if (Model.ProductPrice.IsRental)
                            {
                                addToCartText = T("ShoppingCart.Rent").Text;
                            }
                            if (Model.ProductPrice.AvailableForPreOrder)
                            {
                                addToCartText = T("ShoppingCart.PreOrder").Text;
                            }
                        <input type="button" value="@(addToCartText)" class="product-box-add-to-cart-button-mobile" onclick="AjaxCart.addproducttocart_catalog('@addtocartlink    ');return false;" />
                        }
                    }
                    <div class="clear"></div>
                </div>
                @Html.Widget("productbox_add_info", Model.Id)
            </div>
        </div>
    </div>
</a>
