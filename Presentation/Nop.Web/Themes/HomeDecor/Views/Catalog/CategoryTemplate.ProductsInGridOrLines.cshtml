@model CategoryModel
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";
    Html.AddTitleParts(!String.IsNullOrEmpty(Model.MetaTitle) ? Model.MetaTitle : Model.Name);
    Html.AddMetaDescriptionParts(Model.MetaDescription);
    Html.AddMetaKeywordParts(Model.MetaKeywords);

    var canonicalUrlsEnabled = EngineContext.Current.Resolve<SeoSettings>().CanonicalUrlsEnabled;
    if (canonicalUrlsEnabled)
    {
        var categoryUrl = Url.RouteUrl("Category", new { SeName = Model.SeName }, this.Request.Url.Scheme);
        Html.AddCanonicalUrlParts(categoryUrl);
    }

    var breadcrumbDelimiter = EngineContext.Current.Resolve<CommonSettings>().BreadcrumbDelimiter;
}
<script src="~/Themes/HomeDecor/Content/Js/Common.js"></script>
@using Nop.Core.Domain.Common;
@using Nop.Core.Domain.Seo;
@using Nop.Core.Infrastructure;
@using Nop.Web.Models.Catalog;
@using Nop.Web.Extensions;
@*category breadcrumb*@
@if (Model.DisplayCategoryBreadcrumb)
{
    <div class="breadcrumb">
        <ul>
            <li><a href="@Url.RouteUrl("HomePage")" title="@T("Categories.Breadcrumb.Top")">@T("Categories.Breadcrumb.Top")</a>
                <span class="delimiter">»</span> </li>
            @foreach (var cat in Model.CategoryBreadcrumb)
            {
                var isLastCategory = cat.Id == Model.Id;
                <li>
                    @if (isLastCategory)
                    {
                        <strong class="current-item">@cat.Name</strong>
                    }
                    else
                    {
                        <a href="@Url.RouteUrl("Category", new { SeName = cat.SeName })" title="@cat.Name">@cat.Name</a>
                        <span class="delimiter">»</span>
                    }
                </li>
            }
        </ul>
    </div>
    @Html.Widget("categorydetails_after_breadcrumb", Model.Id)
}
<div class="page category-page">
    <div class="page-title">
        <h1>@Model.Name</h1>
    </div>
    <div class="page-body">
        @Html.Widget("categorydetails_top", Model.Id)
        @*description*@
        @if (!String.IsNullOrWhiteSpace(Model.Description))
        {
            <div class="category-description">
                @Html.Raw(Model.Description)
            </div>
        }
        @Html.Widget("categorydetails_before_subcategories", Model.Id)
        @*subcategories*@
        @if (Model.SubCategories.Count > 0)
        {
            
            <div class="sub-category-grid">
                <div class="row">
                    @foreach (var item in Model.SubCategories)
                    {
                        <div class="col-md-4 col-sm-6">
                            <div class="item-box">
                                <div class="sub-category-item">

                                    <div class="picture">
                                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                            <img alt="@item.PictureModel.AlternateText" src="@item.PictureModel.ImageUrl"
                                         title="@item.PictureModel.Title" /></a>
                                    </div>
                                    <h2 class="title">
                                        <a href="@Url.RouteUrl("Category", new { SeName = item.SeName })" title="@item.PictureModel.Title">
                                            @item.Name</a>
                                    </h2>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
@* @Html.Widget("categorydetails_before_featured_products", Model.Id)*@
        
@*featured products*@
@* @if (Model.FeaturedProducts.Count > 0)
        {
            <div class="product-grid featured-product-grid">
                <div class="title">
                    <strong>@T("Products.FeaturedProducts")</strong>
                </div>
                <div>
                    @foreach (var item in Model.FeaturedProducts)
                    {
                        <div class="item-box">
                            @Html.Partial("_ProductBox", item)
                        </div>
                    }
                </div>
            </div>
        }*@
@* @Html.Widget("categorydetails_after_featured_products", Model.Id)*@
      @*  @if (Model.SubCategories.Count == 0 && Model.Products.Count > 0)
        {
            <div class="product-selectors">
                @if (Model.PagingFilteringContext.AllowProductViewModeChanging && Model.Products.Count > 0)
                {
                    <div class="product-viewmode">
                        <span>@T("Catalog.ViewMode")</span>
                        @foreach (var r in Model.PagingFilteringContext.AvailableViewModes)
                        {
                            if (r.Text == "Grid")
                            {
                            <a class="imgesectionviewmode grid-icon" href="@r.Value"  onclick='setLocation(this.value)' flag="@r.Selected"></a>
                            }
                            else if (r.Text == "List")
                            {
                            <a class="imgesectionviewmode list-icon" href="@r.Value"  onclick='setLocation(this.value)' flag="@r.Selected"></a>
                            

                            }
                        }
                    </div>
                    <script>
                        $(document).ready(function () {
                            $(".imgesectionviewmode").each(function () {
                                if ($(this).attr("flag")) {
                                    $(this).css("font-weight", "bold");
                                    $(this).addClass("Lactive");
                                }
                            })
                        });
                    </script>
                }
                @if (Model.PagingFilteringContext.AllowProductSorting && Model.Products.Count > 0 && Model.SubCategories.Count == 0)
                {
                    <div class="product-sorting">
                        <span>@T("Catalog.OrderBy")</span>
                        @Html.DropDownList("products-orderby", Model.PagingFilteringContext.AvailableSortOptions, new { onchange = "setLocation(this.value);" })
                    </div>
                }
                @if (Model.PagingFilteringContext.AllowCustomersToSelectPageSize && Model.Products.Count > 0 && Model.SubCategories.Count == 0)
                {
                    <div class="product-page-size">
                        <span>@T("Catalog.PageSize")</span>
                        @Html.DropDownList("products-pagesize", Model.PagingFilteringContext.PageSizeOptions, new { onchange = "setLocation(this.value);" })
                        <span>@T("Catalog.PageSize.PerPage")</span>
                    </div>
                }
            </div>
        }*@
        @Html.Widget("categorydetails_before_filters", Model.Id)
        @*<div class="product-filters-wrapper">
            @if (Model.PagingFilteringContext.PriceRangeFilter.Enabled)
            {
                @Html.Partial("_FilterPriceBox", Model.PagingFilteringContext.PriceRangeFilter, new ViewDataDictionary())
            }
            @if (Model.PagingFilteringContext.SpecificationFilter.Enabled)
            {
                @Html.Partial("_FilterSpecsBox", Model.PagingFilteringContext.SpecificationFilter, new ViewDataDictionary())
            }
        </div>*@
        @*@Html.Widget("categorydetails_before_product_list", Model.Id)*@
        @*product list*@
        @if (Model.Products.Count > 0 && Model.SubCategories.Count == 0)
        {
            if (Model.PagingFilteringContext.ViewMode == "list")
            {
@*list mode*@
            <div class="product-list rowdata">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                        @Html.Partial("_ProductListBox", product)
                    </div>
                }
            </div>       
            }
            else
            {
@*grid mode*@
            <div class="product-grid">
                <div class="row rowdata">
                    @foreach (var product in Model.Products)
                    {
                        <div class="col-md-4 col-sm-6">
                            <div class="item-box">
                                @Html.Partial("_ProductBox", product)
                            </div>
                        </div>
                    }
                </div>
            </div>
            }
            
            <script>
                var Page = 2;
                $(document).ready(function () {
                    DivscrollCall(scrollsuccess);
                });
                var processstart = false;
                function scrollsuccess() {

                    GetProduct(Page);
                }
                function GetProduct(Pageno) {

                    if (processstart == false) {
                        $('.DivWait').show();
                        var viewmode = '@Model.PagingFilteringContext.ViewMode';
                        var OrderBy = "0";
                        var productsorderby = "";
                        if ($('#products-orderby').val() != undefined) {
                            productsorderby = $('#products-orderby').val();
                            OrderBy = GetParameterValuesByURL(productsorderby, "orderby");
                        } 
                        var weburl = '@Url.Action("GetProductsWithScroll", "Catalog")';
            var data = "{'page':'" + Pageno + "','categoryId' : '" +@Model.Id +"','viewmode' : '" + viewmode + "','OrderBy' : '" + OrderBy + "'}";
                        processstart = true;
                        _AjaxWithDataAsync(weburl, data, "POST", Successcallback)
                    }
                }
                function Successcallback(data) {
                    $('.rowdata').append(data);
                    if (data.trim() != "") {
                        Page = Page + 1;
                    }
                    processstart = false;
                    $('.DivWait').hide();
                }

            </script>
        }
        <div class="DivWait" style="display: none">
        </div>
        @* <div class="pager">
            @Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber")
        </div>*@
        @*@Html.Widget("categorydetails_bottom", Model.Id)*@
    </div>
</div>


